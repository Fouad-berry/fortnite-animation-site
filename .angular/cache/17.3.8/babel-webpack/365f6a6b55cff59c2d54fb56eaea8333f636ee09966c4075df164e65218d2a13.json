{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../fortnite.service\";\nimport * as i2 from \"@angular/common\";\nfunction CosmeticsListComponent_div_0_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cosmetic_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\", cosmetic_r1.name, \" - \", cosmetic_r1.type, \" - \", cosmetic_r1.rarity, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"src\", cosmetic_r1.images.icon, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction CosmeticsListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Liste des Cosm\\u00E9tiques\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, CosmeticsListComponent_div_0_li_4_Template, 4, 4, \"li\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.cosmetics);\n  }\n}\nexport class CosmeticsListComponent {\n  constructor(fortniteService) {\n    this.fortniteService = fortniteService;\n  }\n  ngOnInit() {\n    this.fetchCosmetics();\n  }\n  fetchCosmetics() {\n    this.fortniteService.getAllCosmetics().subscribe(data => {\n      console.log('Data from API:', data); // Vérifiez les données retournées par l'API\n      this.cosmetics = data.data; // Assurez-vous que la structure des données correspond\n    }, error => {\n      console.error('Error fetching cosmetics:', error); // Vérifiez les erreurs de requête\n    });\n  }\n  static #_ = this.ɵfac = function CosmeticsListComponent_Factory(t) {\n    return new (t || CosmeticsListComponent)(i0.ɵɵdirectiveInject(i1.FortniteService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CosmeticsListComponent,\n    selectors: [[\"app-cosmetics-list\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Icon\", 2, \"height\", \"40px\", 3, \"src\"]],\n    template: function CosmeticsListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CosmeticsListComponent_div_0_Template, 5, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.cosmetics);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate3","cosmetic_r1","name","type","rarity","ɵɵpropertyInterpolate","images","icon","ɵɵsanitizeUrl","ɵɵtemplate","CosmeticsListComponent_div_0_li_4_Template","ɵɵproperty","ctx_r1","cosmetics","CosmeticsListComponent","constructor","fortniteService","ngOnInit","fetchCosmetics","getAllCosmetics","subscribe","data","console","log","error","_","ɵɵdirectiveInject","i1","FortniteService","_2","selectors","decls","vars","consts","template","CosmeticsListComponent_Template","rf","ctx","CosmeticsListComponent_div_0_Template"],"sources":["C:\\Users\\fidri\\fortnite-site\\src\\app\\cosmetics-list\\cosmetics-list.component.ts","C:\\Users\\fidri\\fortnite-site\\src\\app\\cosmetics-list\\cosmetics-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FortniteService } from '../fortnite.service';\r\n\r\n@Component({\r\n  selector: 'app-cosmetics-list',\r\n  templateUrl: './cosmetics-list.component.html',\r\n  styleUrls: ['./cosmetics-list.component.css']\r\n})\r\nexport class CosmeticsListComponent implements OnInit {\r\n  cosmetics!: any[];\r\n\r\n  constructor(private fortniteService: FortniteService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCosmetics();\r\n  }\r\n\r\n  fetchCosmetics(): void {\r\n    this.fortniteService.getAllCosmetics()\r\n      .subscribe(data => {\r\n        console.log('Data from API:', data); // Vérifiez les données retournées par l'API\r\n        this.cosmetics = data.data; // Assurez-vous que la structure des données correspond\r\n      }, error => {\r\n        console.error('Error fetching cosmetics:', error); // Vérifiez les erreurs de requête\r\n      });\r\n  }\r\n}\r\n","<div *ngIf=\"cosmetics\">\r\n    <h2>Liste des Cosmétiques</h2>\r\n    <ul>\r\n      <li *ngFor=\"let cosmetic of cosmetics\">\r\n        <div>{{ cosmetic.name }} - {{ cosmetic.type }} - {{ cosmetic.rarity }}</div>\r\n        <img src=\"{{ cosmetic.images.icon }}\" alt=\"Icon\" style=\"height: 40px;\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  "],"mappings":";;;;;ICIQA,EADF,CAAAC,cAAA,SAAuC,UAChC;IAAAD,EAAA,CAAAE,MAAA,GAAiE;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAC5EH,EAAA,CAAAI,SAAA,aAAuE;IACzEJ,EAAA,CAAAG,YAAA,EAAK;;;;IAFEH,EAAA,CAAAK,SAAA,GAAiE;IAAjEL,EAAA,CAAAM,kBAAA,KAAAC,WAAA,CAAAC,IAAA,SAAAD,WAAA,CAAAE,IAAA,SAAAF,WAAA,CAAAG,MAAA,KAAiE;IACjEV,EAAA,CAAAK,SAAA,EAAgC;IAAhCL,EAAA,CAAAW,qBAAA,QAAAJ,WAAA,CAAAK,MAAA,CAAAC,IAAA,EAAAb,EAAA,CAAAc,aAAA,CAAgC;;;;;IAJzCd,EADJ,CAAAC,cAAA,UAAuB,SACf;IAAAD,EAAA,CAAAE,MAAA,iCAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9BH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAe,UAAA,IAAAC,0CAAA,gBAAuC;IAK3ChB,EADE,CAAAG,YAAA,EAAK,EACD;;;;IALuBH,EAAA,CAAAK,SAAA,GAAY;IAAZL,EAAA,CAAAiB,UAAA,YAAAC,MAAA,CAAAC,SAAA,CAAY;;;ADK3C,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;EAAqB;EAExDC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACF,eAAe,CAACG,eAAe,EAAE,CACnCC,SAAS,CAACC,IAAI,IAAG;MAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC,CAAC,CAAC;MACrC,IAAI,CAACR,SAAS,GAAGQ,IAAI,CAACA,IAAI,CAAC,CAAC;IAC9B,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAjBUX,sBAAsB,EAAApB,EAAA,CAAAgC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtBf,sBAAsB;IAAAgB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRnC1C,EAAA,CAAAe,UAAA,IAAA6B,qCAAA,iBAAuB;;;QAAjB5C,EAAA,CAAAiB,UAAA,SAAA0B,GAAA,CAAAxB,SAAA,CAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}