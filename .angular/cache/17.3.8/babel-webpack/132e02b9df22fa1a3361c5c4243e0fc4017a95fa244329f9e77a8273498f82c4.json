{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../fortnite.service\";\nimport * as i2 from \"@angular/common\";\nfunction CosmeticsListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵelement(2, \"img\", 5);\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"h5\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 8);\n    i0.ɵɵtext(7);\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const cosmetic_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", cosmetic_r1.images.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(cosmetic_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Type: \", cosmetic_r1.type, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Rarity: \", cosmetic_r1.rarity, \" \");\n  }\n}\nexport class CosmeticsListComponent {\n  constructor(fortniteService) {\n    this.fortniteService = fortniteService;\n  }\n  ngOnInit() {\n    this.fetchCosmetics();\n  }\n  fetchCosmetics() {\n    this.fortniteService.getAllCosmetics().subscribe(data => {\n      console.log('Data from API:', data); // Vérifiez les données retournées par l'API\n      this.cosmetics = data.data; // Assurez-vous que la structure des données correspond\n    }, error => {\n      console.error('Error fetching cosmetics:', error); // Vérifiez les erreurs de requête\n    });\n  }\n  static #_ = this.ɵfac = function CosmeticsListComponent_Factory(t) {\n    return new (t || CosmeticsListComponent)(i0.ɵɵdirectiveInject(i1.FortniteService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CosmeticsListComponent,\n    selectors: [[\"app-cosmetics-list\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [\"class\", \"col-md-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\"], [1, \"card\", \"mb-3\"], [\"alt\", \"Icon\", 1, \"card-img-top\", 2, \"height\", \"200px\", \"object-fit\", \"contain\", 3, \"src\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"]],\n    template: function CosmeticsListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, CosmeticsListComponent_div_2_Template, 10, 4, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cosmetics);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","cosmetic_r1","images","icon","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","type","rarity","CosmeticsListComponent","constructor","fortniteService","ngOnInit","fetchCosmetics","getAllCosmetics","subscribe","data","console","log","cosmetics","error","_","ɵɵdirectiveInject","i1","FortniteService","_2","selectors","decls","vars","consts","template","CosmeticsListComponent_Template","rf","ctx","ɵɵtemplate","CosmeticsListComponent_div_2_Template"],"sources":["C:\\Users\\fidri\\fortnite-site\\src\\app\\cosmetics-list\\cosmetics-list.component.ts","C:\\Users\\fidri\\fortnite-site\\src\\app\\cosmetics-list\\cosmetics-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FortniteService } from '../fortnite.service';\r\n\r\n@Component({\r\n  selector: 'app-cosmetics-list',\r\n  templateUrl: './cosmetics-list.component.html',\r\n  styleUrls: ['./cosmetics-list.component.css']\r\n})\r\nexport class CosmeticsListComponent implements OnInit {\r\n  cosmetics!: any[];\r\n\r\n  constructor(private fortniteService: FortniteService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCosmetics();\r\n  }\r\n\r\n  fetchCosmetics(): void {\r\n    this.fortniteService.getAllCosmetics()\r\n      .subscribe(data => {\r\n        console.log('Data from API:', data); // Vérifiez les données retournées par l'API\r\n        this.cosmetics = data.data; // Assurez-vous que la structure des données correspond\r\n      }, error => {\r\n        console.error('Error fetching cosmetics:', error); // Vérifiez les erreurs de requête\r\n      });\r\n  }\r\n}\r\n","<div class=\"container-fluid \">\r\n<div class=\"row\">\r\n  <div class=\"col-md-3\" *ngFor=\"let cosmetic of cosmetics\">\r\n    <div class=\"card mb-3\">\r\n      <img [src]=\"cosmetic.images.icon\" class=\"card-img-top\" alt=\"Icon\" style=\"height: 200px; object-fit: contain;\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{{ cosmetic.name }}</h5>\r\n        <p class=\"card-text\">\r\n          Type: {{ cosmetic.type }}<br>\r\n          Rarity: {{ cosmetic.rarity }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>"],"mappings":";;;;;ICGIA,EADF,CAAAC,cAAA,aAAyD,aAChC;IACrBD,EAAA,CAAAE,SAAA,aAA8G;IAE5GF,EADF,CAAAC,cAAA,aAAuB,YACE;IAAAD,EAAA,CAAAG,MAAA,GAAmB;IAAAH,EAAA,CAAAI,YAAA,EAAK;IAC/CJ,EAAA,CAAAC,cAAA,WAAqB;IACnBD,EAAA,CAAAG,MAAA,GAAyB;IAAAH,EAAA,CAAAE,SAAA,SAAI;IAC7BF,EAAA,CAAAG,MAAA,GACF;IAGNH,EAHM,CAAAI,YAAA,EAAI,EACA,EACF,EACF;;;;IATGJ,EAAA,CAAAK,SAAA,GAA4B;IAA5BL,EAAA,CAAAM,UAAA,QAAAC,WAAA,CAAAC,MAAA,CAAAC,IAAA,EAAAT,EAAA,CAAAU,aAAA,CAA4B;IAERV,EAAA,CAAAK,SAAA,GAAmB;IAAnBL,EAAA,CAAAW,iBAAA,CAAAJ,WAAA,CAAAK,IAAA,CAAmB;IAExCZ,EAAA,CAAAK,SAAA,GAAyB;IAAzBL,EAAA,CAAAa,kBAAA,YAAAN,WAAA,CAAAO,IAAA,KAAyB;IACzBd,EAAA,CAAAK,SAAA,GACF;IADEL,EAAA,CAAAa,kBAAA,cAAAN,WAAA,CAAAQ,MAAA,MACF;;;ADFR,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;EAAqB;EAExDC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACF,eAAe,CAACG,eAAe,EAAE,CACnCC,SAAS,CAACC,IAAI,IAAG;MAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC,CAAC,CAAC;MACrC,IAAI,CAACG,SAAS,GAAGH,IAAI,CAACA,IAAI,CAAC,CAAC;IAC9B,CAAC,EAAEI,KAAK,IAAG;MACTH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAjBUZ,sBAAsB,EAAAhB,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtBhB,sBAAsB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPnCvC,EADA,CAAAC,cAAA,aAA8B,aACb;QACfD,EAAA,CAAAyC,UAAA,IAAAC,qCAAA,kBAAyD;QAa3D1C,EADA,CAAAI,YAAA,EAAM,EACA;;;QAbuCJ,EAAA,CAAAK,SAAA,GAAY;QAAZL,EAAA,CAAAM,UAAA,YAAAkC,GAAA,CAAAd,SAAA,CAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}